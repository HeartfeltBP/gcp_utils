from unittest.mock import Mock
from gcp_utils import main

def test_onNewSample():
    data = {
        'value': {'fields': {
            'username': {'stringValue': 'dev'},
            'sample_id': {'integerValue': 123456789},
            'ppg_raw': {'arrayValue': [-0.176775698932745,-0.186282962865876,-0.19254084052467602,-0.19585387831604,-0.19659501534696402,-0.19517683293798402,-0.192079050067809,-0.18775783531366902,-0.18269749858481102,-0.17739918591688703,-0.172296206105076,-0.16781717992220402,-0.164321340625391,-0.16213587979221603,-0.16149861892247402,-0.162564872815527,-0.16542729660445302,-0.17007954042120402,-0.176436215123904,-0.18429741123119803,-0.19338472857562303,-0.203374227197847,-0.21383907602674002,-0.22433469367993003,-0.234397353742151,-0.243606659022256,-0.251605918548336,-0.258119717907074,-0.26304055447732905,-0.266391485881147,-0.26839188126470404,-0.269449613203192,-0.27005062350770004,-0.270844233288336,-0.272526300746583,-0.27572863933239,-0.28099308209061,-0.288670660540764,-0.298868338480968,-0.31135138167056303,-0.32555572597790505,-0.340547276616667,-0.355075087927942,-0.36760143779589505,-0.37634759021373504,-0.37945444435032205,-0.37506904571298605,-0.36144436232502203,-0.337102906681683,-0.30097955157462203,-0.252494237678884,-0.191678544437997,-0.11919942481350701,-0.036388396352477,0.054830173847564,0.152023898400225,0.25241803962859,0.352850684383817,0.45022688568530705,0.541592408562517,0.6240783560398341,0.695301242935725,0.7533625274300241,0.7969286388832311,0.825292499205546,0.83837186012773,0.8366457559640621,0.821152362141304,0.7933423808038931,0.7550020645277551,0.7081020083072751,0.654662721032321,0.5967258434174381,0.5361727747901031,0.47470214524305604,0.41376849784311603,0.354554733483793,0.29797880964293505,0.24467973884017402,0.195065327404206,0.14932653497524,0.10756279707998301,0.069689754202231,0.035548376121315,0.004991299791178,-0.022158405549087,-0.04610900960527,-0.067035553617589,-0.085109425558302,-0.10049892997366501,-0.11336918902939801,-0.12390844625372001,-0.132302988244122,-0.138775001348096,-0.143553233726733,-0.146890891387814,-0.14906947057015701,-0.150363853864245,-0.15106844870004602,-0.15148875800886302,-0.15191173203313502,-0.152625243079409,-0.153897675538855,-0.15596898921184002,-0.159052811251871,-0.16333007280480602,-0.168886110833976,-0.175783168758883,-0.183999717432934,-0.193429529645908,-0.20387747230730602,-0.215085323197328,-0.22673215119977602,-0.238429850152014,-0.24980339278413202,-0.260464938968952,-0.27007814368925603,-0.27842351602945004,-0.285391086104445,-0.291009418713978,-0.29549073199914605,-0.299210932039006,-0.30267140670040305,-0.306474950457217,-0.311274898478056,-0.3176797759428,-0.326175377422993,-0.337073951728564,-0.35039852580256103,-0.36584348732212,-0.38275560227211003,-0.400059882915455,-0.41636243921953003,-0.429929162103147,-0.43879671079561205,-0.44088695417320706,-0.434118914103844,-0.41657751981504604,-0.386654242450135,-0.343227685677479,-0.285741790901376,-0.21434071859377102,-0.129876673126091,-0.033866437799070004,0.071312580872121,0.182854181038125,0.297626458671911,0.41199972884274405,0.5223983855452601,0.6253703919855771,0.7177490871416241,0.7968489975532671,0.860567766770123,0.9075094930489981,0.93701236595679,0.9491521913469411,0.944675533543414,0.924926286072117,0.891718109608809,0.847176106452117,0.7936237322267361,0.7334330152616241,0.6688543368028681,0.6019845224539471,0.534612030817982,0.468222088232827,0.40395448198375905,0.34260164146419403,0.284631917351497,0.230332457329626,0.179723086207343,0.132695003408247,0.089132703988911,0.048863090166652,0.011733215898770001,-0.022328190083822003,-0.053366044559621004,-0.081368168267861,-0.10629742025833301,-0.128093103783913,-0.146745881315184,-0.16226620509302903,-0.17473173585492802,-0.184329444320523,-0.19127457897421501,-0.19592490747799002,-0.19867174925112302,-0.19999584858829503,-0.20041709971606902,-0.20045399063827002,-0.20064157218275402,-0.20147846371806202,-0.203407528441805,-0.20680052654167103,-0.21191747511626102,-0.21891431857190402,-0.22784392759111102,-0.23859941304798402,-0.250944782570427,-0.264541618845588,-0.278916057640524,-0.29351059834589704,-0.30771794933240104,-0.32088230405886703,-0.33237719845123004,-0.34163683489736,-0.34814455208258704,-0.351570114378477,-0.351785493809709,-0.34887282034817,-0.34333145517171304,-0.335584294556233,-0.326582492457041,-0.31757968244585505,-0.30960760055950204,-0.303887003312005,-0.30155387762455504,-0.303508862505591,-0.310348161636321,-0.32219077304429605,-0.338701232991716,-0.35907666239747604,-0.38191026327466304,-0.40532146487035803,-0.42701876140423506,-0.44440307840478704,-0.45472430998359203,-0.45472430998359203,-0.455254320674819,-0.44349714546553903,-0.41734811679461603,-0.37526992037001805,-0.316523506518678,-0.24114268788426002,-0.15005535982711202,-0.045102768832925,0.07107731682104801,0.19514794604363803,0.32329143911073704,0.45138087396430804,0.575228445521213,0.690833214067147,0.7945933551702371,0.8834707004434411,0.9551741497908841,1.008142246848837,1.0417173816136711,1.05603823163846,1.051945863543407,1.030949580941176,0.9950692967141811,0.94666003811492,0.8882670253809821,0.822486981596879,0.751796115196623,0.6784655802045161,0.6044406374583421]}
        }}
    }
    context = None
    assert main.onNewSample(data, context)

# def test_onValidSample():
#     data = {}
#     req = Mock(get_json=Mock(return_value=data), args=data)

#     # Call tested function
#     assert main.hello_http(req) == 'Hello World!'
